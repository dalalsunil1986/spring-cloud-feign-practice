HATEOAS란...

HATEOAS = Hypermedia AS The Engine Of Application State의 약자

아직 졸업을 앞둔 대학생이지만 REST를 꽤 오래 접한것 같다..
내가 알고 있는 REST는 한 문장으로 설명이 안된다. 꼭 누군가에게 말하다 보면 HTTP에 대한 이야기가 등장한다.

HTTP는 간단하게 말해 www상에서 Server와 Client가 데이터를 주고 받기 위한 송수신 프로토콜이다.
대표적인 송수신 데이터로는 HTML이 있다.

신기하게도 많은 학생들이 HTTP가 뭐죠? 라고 물어보면 약간의 학생들은 이렇게 답한다..
그리도 대부분의 학생들은 "아 HTTP요? .. 아 그 서버..클라이언트.. 잘 모르겠네요"
그리고 더이상의 추가 요소는 없다.. 분명 웹개발을 하는 것으로 알고 있는데 말이다.

Server Client 모델의 송수신 프로토콜로 대표적인 HTML 외 많은 형식의 데이터를 보낼 수 있다. HTML은 정말 "대표적"인 예일 뿐이다.
또한 HTTP는 가장 돋보이는 특징이 있다. 바로 Connectless와 Stateless이다.

client가 request를 보내고, server측은 이에대해 response를 뱉는다. 그 후 client와 server간의 연결은 끊긴다. 이러한 특징을 connectless 라고 한다.
이 특징 때문에 server측은 client의 정보를 가지고 있지 않는다. 이러한 특징을 stateless 라고 한다. (그래서 세션, 쿠키 있지)

학생이더라도 HTTP에 대해 묻는다면 적어도 이러한 특징은 얘기 하면 좋지 않을까 싶다. HTTP Method와 Status Code에 대해 정확히 알면 좋지만, 모든 학생들이 알 수는 없으니
개념이라도 탄탄하게 가져가는게 좋을 것 같다.

어쨌든 HTTP를 간단하게 설명했다. 그래서 내가 이해하는 REST는 무엇인가?

누군가 면접때 REST가 뭡니까? 라고 묻는다면 앞의 HTTP의 특성을 소개하고,
이러한 HTTP의 특성과(CRUD요소 포함) 추가적인 몇가지를 말하겠다.

추가적인 몇가지는 다음과 같다.
1. URI로 자원을 명세한다.
2. HTTP Method로 자원에 대한 행위를 표현한다.

이러한 특성을 지켜 만든 서비스를 "RESTful하다" 라고 말하고, 이렇게 개발된 API를 RESTful API라고 한다.

이 다음부터는 개인의 역량에 달린 것이고 크게 말하자면 이정도면 되지 않을까 싶다.

HATEOAS란?
- Restful API를 사용하는 클라이언트가 전적으로 서버와 동적인 상호작용이 가능하도록 하는 것을 HATEOAS라 부른다.
이러한 방법은 클라이언트가 서버로부터 어떠한 요청을 할 때, 필요한(의존되는) URI를 응답에 포함시켜 반환하는것으로 가능하게 한다.
